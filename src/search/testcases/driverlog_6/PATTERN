int patt[] = {4, 5, 7, 9, 10, 11, 12};

Kanonische Heuristikfunktion
//1. one pattern
int patt_1[7] = {4, 5, 7, 9, 10, 11, 12};
vector<int> pattern_1(patt_1, patt_1 + sizeof(patt_1) / sizeof(int));
vector<vector<int> > pattern_collection(1);
pattern_collection[0] = pattern_1;

//2. two patterns
int patt_1[3] = {4, 5, 7};
vector<int> pattern_1(patt_1, patt_1 + sizeof(patt_1) / sizeof(int));
int patt_2[4] = {9, 10, 11, 12};
vector<int> pattern_2(patt_2, patt_2 + sizeof(patt_2) / sizeof(int));
vector<vector<int> > pattern_collection(2);
pattern_collection[0] = pattern_1;
pattern_collection[1] = pattern_2;

//3. three patterns
int patt_1[2] = {4, 5};
vector<int> pattern_1(patt_1, patt_1 + sizeof(patt_1) / sizeof(int));
int patt_2[2] = {7, 9};
vector<int> pattern_2(patt_2, patt_2 + sizeof(patt_2) / sizeof(int));
int patt_3[3] = {10, 11, 12};
vector<int> pattern_3(patt_3, patt_3 + sizeof(patt_3) / sizeof(int));
vector<vector<int> > pattern_collection(3);
pattern_collection[0] = pattern_1;
pattern_collection[1] = pattern_2;
pattern_collection[2] = pattern_3;
